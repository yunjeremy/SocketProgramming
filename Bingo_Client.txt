#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <time.h>
void error_handling(char *message);

int lineArr[25];
int line[5][5];
int i, j, k, l[25], m[25];
int running = 1;
int num;
int cn;

// 빙고판 만들기
void getRandomNumber()
{
   srand(time(NULL));
   for(i=0; i<25;)
   {
      l[i]=rand()%25+1;
      for(j=0,k=0; j<i; j++)
      {
         if(l[i]==l[j])
         {
            k=1; break;
         }
      }
      if(k==0)
         i=i+1;
   }
   for(i=0; i<25; i++) // lineArr[]에 랜덤으로 숫자 입력 1~25
   {
      lineArr[i] = l[i];
   }
   for(i=0; i<5; i++)
   {
      for(j=0; j<5; j++)
      {
         line[j][i] = lineArr[i+j*5];
      }   
   }
}

// lineArr[] 5개마다 line_1,2,3,4,5[]에 입력
void printLine() 
{
   for(i=0; i<5; i++)  
      {
         for(j=0; j<5; j++)
         {
            printf("%d\t", line[j][i]);
         }
         printf("\n");
      }
   printf("\n");
}

// 입력 숫자 0으로 변환
void inputNumber() 
{
      for(i=0; i<5; i++)
      {
         for(j=0; j<5; j++)
         {
            if(num == line[j][i])
               line[j][i] = 0;
         }
      }

}

// 클라리언트 숫자 입력
void clinetInput()
{
   while(1)
   {
      cn = rand() % 25 + 1;
      for(i=0; i<5; i++)
      {
         for(j=0; j<5; j++)
         {
            if(cn==line[j][i])
            line[j][i]=0;
            break;
         }
      }
   }
}

// 가로 빙고
void hBingo()
{
   for(i=0; i<5; i++)
      {
         for(j=0; j<5; j++)
         {
            if(line[i][j]!=0)
            {   
               break;
            }
         }
         if(j==5)
         {
            
            printf("BINGO!!");
            running = 0;
         }
      }
}

// 세로 빙고
void vBingo()
{
   for(i=0; i<5; i++)
      {
         for(j=0; j<5; j++)
         {
            if(line[j][i]!=0)
            {   
               break;
            }
         }
         if(j==5)
         {
            
            printf("BINGO!!");
            running = 0;
         }
      }
}

// 대각선 빙고
void dBingo()
{
   for(i=0; i<5; i++)
      {
         if(line[i][i]!=0) 
         {
            break;
         }  
      }
      if(i==5)
      {
         
         printf("BINGO!!");
         running = 0;
      }
}

// 대각선 빙고2
void ddBingo()
{
   if(line[0][4]==0 & line[1][3]==0 & line[2][2]==0 & line[3][1]==0 & line[4][0]==0)
   {
      
      printf("BINGO!!");
      running = 0;
   }
}

int main(int argc, char *argv[])
{
   int serv_sock;
   int clnt_sock;
   
   struct sockaddr_in serv_addr;
   struct sockaddr_in clnt_addr;
   socklen_t clnt_addr_size;

   char clientmessage[100];
   if(argc!=2)
   {
      printf("Usage : %s <port>\n", argv[0]);
      exit(1);
   }
   
   serv_sock=socket(PF_INET, SOCK_STREAM, 0);
   if(serv_sock == -1)
      error_handling("socket() error");
      
   memset(&serv_addr, 0, sizeof(serv_addr));
   serv_addr.sin_family=AF_INET;
   serv_addr.sin_addr.s_addr=htonl(INADDR_ANY);
   serv_addr.sin_port=htons(atoi(argv[1]));
   
   if(bind(serv_sock, (struct sockaddr*) &serv_addr, sizeof(serv_addr))==-1)
      error_handling("listen() error");
      
   if(listen(serv_sock, 5)==-1)
      error_handling("listen() error");
      
   clnt_addr_size=sizeof(clnt_addr);
   clnt_sock=accept(serv_sock, (struct sockaddr*)&clnt_addr, &clnt_addr_size);
   if(clnt_sock==-1)
      error_handling("accept() error");

   getRandomNumber(); // 빙고판 생성

   printLine(); // 빙고판 출력
   while(running==1) // 빙고가 될 때 까지 반복
   {
      read(clnt_sock, &num, sizeof(num)); // client에서 입력한 수 받기
     
      if(num==0) // client에서 빙고시 0전송
      {
         printf("clientWin");
         break;
      }
      inputNumber(); // 받은 수 0으로 변환
      if(running==0)
      {
         break;
      }
      int isSend = 0; // for문 탈출 변수
      while(isSend==0){
         cn = rand() % 25 + 1; // 랜덤으로 server에서 입력할 수
         for(i=0; i<5; i++) 
         {
            for(j=0; j<5; j++)
            {
               if(cn==line[j][i])
               {
                  line[j][i]=0; // server에서 입력한 수 0으로 변환
                  hBingo(); // 빙고 찾기
                  vBingo();
                  dBingo();
                  ddBingo();
                  isSend=1;
                  if(running==0)
                  {
                     cn=0;
                     printf("serverWin");
                     write(clnt_sock, &cn, sizeof(cn)); // server승리 전송
                     break;
                  }
                  printLine();
                  write(clnt_sock, &cn, sizeof(cn)); // server 숫자 전송
                  break;
               }  
            }
            if(isSend==1)
            {
               break;
            }
         }
      }
      
      
   }
   close(clnt_sock);
   close(serv_sock);
   return 0;
}

void error_handling(char *message)
{
   fputs(message, stderr);
   fputc('\n', stderr);
   exit(1);
}